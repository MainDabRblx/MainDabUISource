namespace MainDab.Classes.EasyExploitsAPI
{
    public class Module
    {
		private bool CheckLastestDll(global::Microsoft.Win32.RegistryKey registryKey)
		{
			string[] array = this.wc.DownloadString("https://raw.githubusercontent.com/GreenMs02/Update/master/Module.txt").Split("\r\n".ToCharArray(), global::System.StringSplitOptions.RemoveEmptyEntries);
			if (!(array[2] == "true"))
			{
				return false;
			}
			if (global::System.IO.Directory.Exists(global::System.Environment.GetFolderPath(global::System.Environment.SpecialFolder.LocalApplicationData) + "\\Roblox\\Versions\\" + array[3]))
			{
				registryKey.SetValue("Ver", array[3]);
				return true;
			}
			return false;
		}

		// Token: 0x06000002 RID: 2 RVA: 0x000020BC File Offset: 0x000002BC
		private bool CheckDllUpdate()
		{
			string[] array = this.wc.DownloadString("https://raw.githubusercontent.com/GreenMs02/Update/master/Module.txt").Split("\r\n".ToCharArray(), global::System.StringSplitOptions.RemoveEmptyEntries);
			global::Microsoft.Win32.RegistryKey registryKey = global::Microsoft.Win32.Registry.CurrentUser.OpenSubKey("SOFTWARE\\\\CoCO", true);
			if (registryKey == null)
			{
				registryKey = global::Microsoft.Win32.Registry.CurrentUser.CreateSubKey("SOFTWARE\\\\CoCO");
				registryKey.SetValue("Ver", "0");
			}
			else
			{
				if (registryKey.GetValue("Ver").ToString() != array[0])
				{
					registryKey.SetValue("Ver", array[0]);
					return true;
				}
				if (registryKey.GetValue("Ver").ToString() != array[3] && this.CheckLastestDll(registryKey))
				{
					return true;
				}
			}
			return !global::System.IO.File.Exists("EasyExploitsDLL.dll");
		}

		// Token: 0x06000003 RID: 3 RVA: 0x0000217C File Offset: 0x0000037C
		private bool DownloadDLL()
		{
			global::Microsoft.Win32.RegistryKey registryKey = global::Microsoft.Win32.Registry.CurrentUser.OpenSubKey("SOFTWARE\\\\CoCO", true);
			string[] array = this.wc.DownloadString("https://raw.githubusercontent.com/GreenMs02/Update/master/Module.txt").Split("\r\n".ToCharArray(), global::System.StringSplitOptions.RemoveEmptyEntries);
			if (registryKey.GetValue("Ver").ToString() == array[3] && this.CheckLastestDll(registryKey))
			{
				this.wc.DownloadFile(array[4], "EasyExploitsDLL.dll");
			}
			else
			{
				this.wc.DownloadFile(array[1], "EasyExploitsDLL.dll");
			}
			return global::System.IO.File.Exists("EasyExploitsDLL.dll");
		}

		// Token: 0x06000004 RID: 4 RVA: 0x00002210 File Offset: 0x00000410
		public void ExecuteScript(string Script)
		{
			if (Module.namedPipeExist("ocybedam"))
			{
				using (global::System.IO.Pipes.NamedPipeClientStream namedPipeClientStream = new global::System.IO.Pipes.NamedPipeClientStream(".", "ocybedam", global::System.IO.Pipes.PipeDirection.Out))
				{
					namedPipeClientStream.Connect();
					using (global::System.IO.StreamWriter streamWriter = new global::System.IO.StreamWriter(namedPipeClientStream, global::System.Text.Encoding.Default, 0xF423F))
					{
						streamWriter.Write(Script);
						streamWriter.Dispose();
					}
					namedPipeClientStream.Dispose();
				}
				return;
			}
			if (global::System.IO.File.Exists("EasyExploitsDLL.dll"))
			{
				global::System.Windows.Forms.MessageBox.Show("Please attach!", "NamedPipeDoesntExist", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
				return;
			}
			//global::System.Windows.Forms.MessageBox.Show("Please turn off your antivirus! bruh", "DLLDoesntExist", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
		}

		// Token: 0x06000005 RID: 5 RVA: 0x000022CC File Offset: 0x000004CC
		private void InjectDLL()
		{
			DLLInjection.DllInjectionResult dllInjectionResult = DLLInjection.DllInjector.GetInstance.Inject("RobloxPlayerBeta", global::System.Windows.Forms.Application.StartupPath + "\\EasyExploitsDLL.dll");
			if (dllInjectionResult == DLLInjection.DllInjectionResult.Success)
			{
				return;
			}
			switch (dllInjectionResult)
			{
				case DLLInjection.DllInjectionResult.DllNotFound:
					global::System.Windows.Forms.MessageBox.Show("Couldn't find the dll!", "Error: Dll Not Found", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
					return;
				case DLLInjection.DllInjectionResult.GameProcessNotFound:
					global::System.Windows.Forms.MessageBox.Show("No ROBLOX process found!", "Game Process Not Found", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
					return;
				case DLLInjection.DllInjectionResult.InjectionFailed:
					global::System.Windows.Forms.MessageBox.Show("Injection failed!", "Injection Failed", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
					return;
				default:
					return;
			}
		}

		// Token: 0x06000006 RID: 6 RVA: 0x0000234C File Offset: 0x0000054C
		public void LaunchExploit()
		{
			if (Module.namedPipeExist("ocybedam"))
			{
				//global::System.Windows.Forms.MessageBox.Show("Already Attached!", "NamedPipeExist!", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
				return;
			}
			if (!this.CheckDllUpdate() && global::System.IO.File.Exists("EasyExploitsDLL.dll"))
			{
				this.InjectDLL();
				return;
			}
			if (this.DownloadDLL())
			{
				this.InjectDLL();
				return;
			}
			global::System.Windows.Forms.MessageBox.Show("Cant download the lastest version!", "ERROR", global::System.Windows.Forms.MessageBoxButtons.OK, global::System.Windows.Forms.MessageBoxIcon.Hand);
		}

		// Token: 0x06000007 RID: 7 RVA: 0x000023B8 File Offset: 0x000005B8
		private static bool namedPipeExist(string pipeName)
		{
			bool result;
			try
			{
				if (!Module.WaitNamedPipe(global::System.IO.Path.GetFullPath(string.Format("\\\\.\\pipe\\{0}", pipeName)), 0))
				{
					int lastWin32Error = global::System.Runtime.InteropServices.Marshal.GetLastWin32Error();
					if (lastWin32Error == 0)
					{
						result = false;
						return result;
					}
					if (lastWin32Error == 2)
					{
						result = false;
						return result;
					}
				}
				result = true;
			}
			catch (global::System.Exception)
			{
				result = false;
			}
			return result;
		}

		// Token: 0x06000008 RID: 8
		[global::System.Runtime.InteropServices.DllImport("kernel32.dll", CharSet = global::System.Runtime.InteropServices.CharSet.Auto, SetLastError = true)]
		private static extern bool WaitNamedPipe(string name, int timeout);

		// Token: 0x06000009 RID: 9 RVA: 0x00002414 File Offset: 0x00000614
		public Module()
		{
		}

		// Token: 0x04000001 RID: 1
		private global::System.Net.WebClient wc = new global::System.Net.WebClient();
	}
}
